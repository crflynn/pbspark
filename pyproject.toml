[tool.poetry]
name = "pbspark"
version = "0.2.0"
description = "Decode protobuf messages into spark dataframes"
authors = ["flynn <crf204@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/crflynn/pbspark"
repository = "https://github.com/crflynn/pbspark"
documentation = "https://github.com/crflynn/pbspark"
include = [
    { path="CHANGELOG.md", format="sdist" },
    { path="LICENSE.txt", format="sdist" },
    { path="README.md", format="sdist" },
]
keywords = ["spark", "protobuf", "pyspark"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Database",
]

[tool.poetry.dependencies]
python = "^3.7"
pyspark = "^3.2.0"
protobuf = "^3.19.1"

[tool.poetry.dev-dependencies]
black = "^21.11b1"
isort = "^5.10.1"
pytest = "^6.2.5"
mypy-protobuf = "^3.0.0"
mypy = "^0.910"
types-protobuf = "^3.18.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.circleci
    | \.git
    | \.github
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
